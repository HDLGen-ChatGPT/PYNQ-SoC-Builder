-- Title Section Start
-- VHDL testbench LukeAND_TB
-- Generated by HDLGen, Github https://github.com/fearghal1/HDLGen-ChatGPT, on 19-October-2023 at 15:05

-- Component Name : LukeAND
-- Title          : AND2_1_L

-- Author(s)      : LC
-- Organisation   : University of Galway
-- Email          : LC@G.COM
-- Date           : 19/10/2023

-- Description    : refer to component hdl model for function description and signal dictionary
-- Title Section End
-- library declarations
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Testbench entity declaration. No inputs or outputs
entity LukeAND_TB is end entity LukeAND_TB;

architecture behave of LukeAND_TB is

-- unit under test (UUT) component declaration. Identical to component entity, with 'entity' replaced with 'component'
component LukeAND is 
Port(
	AND2In1 : in std_logic;
	AND2In0 : in std_logic;
	ANDOut : out std_logic 
	);
end component;

-- testbench signal declarations
signal testNo: integer; -- aids locating test in simulation waveform
signal endOfSim : boolean := false; -- assert at end of simulation to highlight simuation done. Stops clk signal generation.

-- Typically use the same signal names as in the VHDL entity, with keyword signal added, and without in/out mode keyword

signal AND2In1 : std_logic;
signal AND2In0 : std_logic;
signal ANDOut : std_logic;

constant period: time := 20 ns; -- Default simulation time. Use as simulation delay constant, or clk period if sequential model ((50MHz clk here)
 
begin

-- instantiate unit under test (UUT)
UUT: LukeAND-- map component internal sigs => testbench signals
port map
	(
	AND2In1 => AND2In1, 
	AND2In0 => AND2In0, 
	ANDOut => ANDOut
	);

-- Signal stimulus process
stim_p: process -- process sensitivity list is empty, so process automatically executes at start of simulation. Suspend process at the wait; statement
begin
	report "%N Simulation start, time = "& time'image(now);

	-- Apply default INPUT signal values. Do not assign output signals (generated by the UUT) in this stim_p process
	-- Each stimulus signal change occurs 0.2*period after the active low-to-high clk edge
	-- if signal type is
	-- std_logic, use '0'
	-- std_logic_vector use (others => '0')
	-- integer use 0
	AND2In1 <= '0';
	AND2In0 <= '0';

	-- START Add testbench stimulus here
	-- === If copying a stim_p process generated by ChatGPT, delete the following lines from the beginning of the pasted code
	-- === Delete the -- === notes
	-- === stim_p: process
	-- === begin


	-- ==== If copying a stim_p process generated by ChatGPT, delete the following lines from the pasted code
	-- === wait;
	-- === end process stim_p;

	-- END Add testbench stimulus here
	-- Print picosecond (ps) = 1000*ns (nanosecond) time to simulation transcript
	-- Use to find time when simulation ends (endOfSim is TRUE)
	-- Re-run the simulation for this time
	-- Select timing diagram and use View>Zoom Fit
	report "%N Simulation end, time = "& time'image(now);
	endOfSim <= TRUE; -- assert flag to stop clk signal generation

	wait; -- wait forever
end process; 
end behave;